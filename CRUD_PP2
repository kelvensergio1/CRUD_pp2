def salvar_dados():
    """Salva todos os dados em arquivos JSON"""
    dados = {
        'clientes': clientes,
        'apostas': apostas,
        'proximo_id_aposta': proximo_id_aposta
    }
    
    with open('dados_loteria.json', 'w') as f:
        json.dump(dados, f, indent=4)

def carregar_dados():
    """Carrega dados dos arquivos JSON"""
    global clientes, apostas, proximo_id_aposta
    
    try:
        with open('dados_loteria.json', 'r') as f:
            dados = json.load(f)
            clientes = dados.get('clientes', [])
            apostas = dados.get('apostas', [])
            proximo_id_aposta = dados.get('proximo_id_aposta', 1)
    except FileNotFoundError:
        # Se o arquivo n√£o existe, come√ßa com dados vazios
        clientes = []
        apostas = []
        proximo_id_aposta = 1


#  DADOS GLOBAIS  #
clientes = []
jogos = [
    ["MEGA", "Mega-Sena", 50000000],
    ["QUINA", "Quina", 10000000],
    ["LOTOF", "Lotof√°cil", 2000000]
]
apostas = []
# Usa um contador para IDs √∫nicos das apostas
proximo_id_aposta = 1


# Valida√ß√£o do CPF #
def validar_cpf(cpf_digitado):
    """Valida se o CPF tem 11 d√≠gitos num√©ricos"""
    cpf_limpo = ''.join([c for c in cpf_digitado if c.isdigit()])#filtra so os dados numericos do cpf
    return cpf_limpo if len(cpf_limpo) == 11 else False

# ========== FUN√á√ïES PRINCIPAIS ========== #
def cadastrar_cliente():
    """Cadastra um novo cliente"""
    print("\n--- CADASTRAR CLIENTE ---")
    
    while True:
        cpf = input("CPF (11 n√∫meros): ")
        cpf_validado = validar_cpf(cpf)
        
        if cpf_validado:
            if not any(cliente["cpf"] == cpf_validado for cliente in clientes):
                break
            print("‚ùå CPF j√° cadastrado!")
        else:
            print("‚ùå CPF inv√°lido! Digite 11 n√∫meros.")
    
    nome = input("Nome: ")
    telefone = input("Telefone: ")
    
    clientes.append({"cpf": cpf_validado, "nome": nome, "telefone": telefone})
    salvar_dados()  
    print(f"‚úÖ Cliente {nome} cadastrado!")

def listar_jogos():
    """Lista todos os jogos dispon√≠veis"""
    print("\n--- JOGOS DISPON√çVEIS ---")
    for jogo in jogos:
        print(f"{jogo[0]} - {jogo[1]} (Pr√™mio: R$ {jogo[2]:,})")

def registrar_aposta():
    """Registra uma nova aposta"""
    global proximo_id_aposta
    
    print("\n--- NOVA APOSTA ---")
    
    if not clientes:
        print("‚ùå Cadastre clientes primeiro!")
        return
    
    # Selecionar cliente
    print("Clientes:")
    for cliente in clientes:
        print(f"{cliente['cpf']} - {cliente['nome']}")
    
    while True:
        cpf = input("\nCPF do cliente: ")
        cpf_validado = validar_cpf(cpf)
        cliente = next((c for c in clientes if c["cpf"] == cpf_validado), None)
        if cliente:
            break
        print("‚ùå Cliente n√£o encontrado!")
    
    # Selecionar jogo
    listar_jogos()
    while True:
        codigo = input("\nC√≥digo do jogo: ").upper()
        jogo = next((j for j in jogos if j[0] == codigo), None)
        if jogo:
            break
        print("‚ùå Jogo inv√°lido!")
    
    # Valor da aposta
    while True:
        try:
            valor = float(input("Valor R$: "))
            if valor > 0:
                break
            print("‚ùå Valor deve ser positivo!")
        except:
            print("‚ùå Digite um n√∫mero v√°lido!")
    
    data = input("Data (DD/MM/AAAA): ")
    
    # Adiciona aposta com um √∫nico ID
    apostas.append({
        "id": proximo_id_aposta,
        "cpf": cpf_validado,
        "jogo": codigo,
        "valor": valor,
        "data": data
    })
    salvar_dados()
    print(f"‚úÖ Aposta registrada! ID: {proximo_id_aposta}")
    proximo_id_aposta += 1

def buscar_apostador():
    """Busca apostador por CPF"""
    print("\n--- BUSCAR APOSTADOR ---")
    
    while True:
        cpf = input("CPF: ")
        cpf_validado = validar_cpf(cpf)
        if cpf_validado:
            break
        print("‚ùå CPF inv√°lido!")
    
    cliente = next((c for c in clientes if c["cpf"] == cpf_validado), None)
    if not cliente:
        print("‚ùå Cliente n√£o encontrado!")
        return
    
    print(f"\nCliente: {cliente['nome']}")
    print("Apostas:")
    
    apostas_cliente = [a for a in apostas if a["cpf"] == cpf_validado]
    if not apostas_cliente:
        print("Nenhuma aposta encontrada.")
    else:
        for aposta in apostas_cliente:
            jogo = next(j for j in jogos if j[0] == aposta["jogo"])
            print(f"ID: {aposta['id']} | {jogo[1]} | R$ {aposta['valor']:.2f} | {aposta['data']}")

def excluir_aposta():
    """Exclui uma aposta por ID"""
    print("\n--- EXCLUIR APOSTA ---")
    
    if not apostas:
        print("‚ùå Nenhuma aposta cadastrada!")
        return
    
    # Mostra todas as apostas
    print("Apostas registradas:")
    for aposta in apostas:
        cliente = next(c for c in clientes if c["cpf"] == aposta["cpf"])
        jogo = next(j for j in jogos if j[0] == aposta["jogo"])
        print(f"ID: {aposta['id']} | {cliente['nome']} | {jogo[1]} | R$ {aposta['valor']:.2f}")
    
    while True:
        try:
            id_aposta = int(input("\nID da aposta para excluir: "))
            aposta = next((a for a in apostas if a["id"] == id_aposta), None)
            if aposta:
                confirmacao = input(f"Confirmar exclus√£o da aposta ID {id_aposta}? (S/N): ").upper()
                if confirmacao == "S":
                    apostas.remove(aposta)
                    salvar_dados()
                    print("‚úÖ Aposta exclu√≠da!")
                    return
                else:
                    print("‚ùå Exclus√£o cancelada!")
                    return
            print("‚ùå ID n√£o encontrado!")
        except:
            print("‚ùå Digite um n√∫mero v√°lido!")

# ========== MENU PRINCIPAL ========== #
def menu_principal():
    """Menu do sistema"""
    while True:
        print("\n=== üé∞ LOT√âRICA ===")
        print("1. Cadastrar Cliente")
        print("2. Listar Jogos")
        print("3. Registrar Aposta")
        print("4. Buscar Apostador")
        print("5. Excluir Aposta")
        print("6. Sair")
        
        opcao = input("Op√ß√£o: ")
        
        if opcao == "1":
            cadastrar_cliente()
        elif opcao == "2":
            listar_jogos()
        elif opcao == "3":
            registrar_aposta()
        elif opcao == "4":
            buscar_apostador()
        elif opcao == "5":
            excluir_aposta()
        elif opcao == "6":
            print("‚úÖ Sistema encerrado!")
            break
        else:
            print("‚ùå Op√ß√£o inv√°lida!")

# ========== IN√çCIO ========== #
if __name__ == "__main__":
  carregar_dados()
  menu_principal()
